
#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info. 
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # HTTP (not secure) server, it's here just because, 
    # but it won't serve anything of value
    #
    server {
        listen       80;
        server_name  loki.twinwork.net;

        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    #
    # HTTPS servers
    #

    # Main HTTPS server
    #
    server {
        listen          443 ssl http2;
        server_name     loki.twinwork.net;

        # using the path as a key to redirect to its equivelant jail
        rewrite ^/nextcloud$ /nextcloud/ permanent;
        rewrite ^/poudriere$ /poudriere/ permanent;

        ssl_certificate	/usr/local/etc/letsencrypt/live/loki.twinwork.net/fullchain.pem;
        ssl_certificate_key /usr/local/etc/letsencrypt/live/loki.twinwork.net/privkey.pem;

        # the proxy config that you'll redirect all requests to other jails
        include         proxy.conf;

        error_page      500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }
    }

    # Another HTTPS server with a different domain 
    # (w/ different SSL certs/keys provided)
    #
    server {
        listen          443 ssl http2;
        server_name     anotherdomain.com;

        ssl_certificate /usr/local/etc/letsencrypt/live/anotherdomain.com/fullchain.pem;
        ssl_certificate_key /usr/local/etc/letsencrypt/live/anotherdomain.com/privkey.pem;

        error_page      500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }
    }

    # common SSL config for all defined servers
    include	ssl_common.conf;
}
