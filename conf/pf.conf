# The original `pf.conf` from http://notes.twinwork.net/freebsd
#
#
#################################################################
# Macros
#################################################################
#----------------------------------------------------------------
# Define network interfaces using if_*
#----------------------------------------------------------------
if_int = "xl0"
if_ext = "fxp0"
if_loop = "lo0"

#----------------------------------------------------------------
# Define services using svc_*
#----------------------------------------------------------------
svc_tcp = "{ 22, 113 }"

#----------------------------------------------------------------
# Define types using types_*
#----------------------------------------------------------------
types_icmp = "echoreq"

#----------------------------------------------------------------
# Define networks using nets_*
#----------------------------------------------------------------
nets_loopback = "{ 0.0.0.0/8, 127.0.0.0/8 }"
nets_private = "{ 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
nets_dhcpautoconfig = "{ 169.254.0.0/16 }"
nets_otherreserved = "{ 192.0.2.0/24, 204.152.64.0/23, 224.0.0.0/3 }"

#----------------------------------------------------------------
# Designate computer services using comp_*
#----------------------------------------------------------------
# comp_teamspeak = "192.168.0.10" # An example for internal services

#################################################################
# Options
#################################################################
set block-policy return
set loginterface $if_ext

#################################################################
# Scrub
#################################################################
scrub in all

#################################################################
# Queueing (ALTQ)
#################################################################

#################################################################
# Network Address Translation
#################################################################
nat on $if_ext from $if_int:network to any -> ($if_ext)

#################################################################
# Redirection
#################################################################

#################################################################
# Filtering
#################################################################
block in log all


#################################################################
# External Interface
#################################################################

# Block all inbound traffic from non-routable or reserved address spaces
#-----------------------------------------------------------------------
block drop in quick on $if_ext from $nets_private to any

#----------------------------------------------------------------
# Allow out all TCP, UDP, and ICMP traffic & keep state on it
# so that it's allowed back in.
#----------------------------------------------------------------
pass out quick on $if_ext proto tcp all modulate state flags S/SA
pass out quick on $if_ext proto { udp, icmp } all keep state


#----------------------------------------------------------------
# If you wanted to set up a web server or mail server on your box
# (which is outside the scope of this howto), or allow another system
# on the Internet to externally SSH into your firewall, you'd want to
# uncomment the following lines and modify as appropriate. If you
# have other services running that you need to allow external access
# to, just add more lines using these as examples.
#
# If the services are on a box on your internal network (rather than
# the firewall itself), you'll have to add both the filter listed below,
# plus a redirect rule in your /etc/ipnat.rules file.
#----------------------------------------------------------------
# pass in quick on $if_ext proto tcp from any to any port 80 flags S/SA keep state
# pass in quick on $if_ext proto tcp from any to any port 25 flags S/SA keep state
# pass in quick on $if_ext proto tcp from any to any port 110 flags S/SA keep state
# pass in quick on $if_ext proto tcp from any to any port 113 flags S/SA keep state
# pass in quick on $if_ext proto tcp from any to any port 22 flags S/SA keep state
# pass in quick on $if_ext proto tcp from X.X.X.X/32 to any port 22 flags S/SA keep state

#----------------------------------------------------------------
# Setup for FTPd access for both active and passive state connections.
# You'll need to set the port range in passive state on your FTPd.
#----------------------------------------------------------------
# pass in quick on $if_ext proto tcp from any to any port 21 flags S/SA keep state
# pass in quick on $if_ext proto tcp from any to any port 30000 >< 50000 flags S/SA keep state

#################################################################
# Inside Interface
#################################################################

#----------------------------------------------------------------
# Allow out all TCP, UDP, and ICMP traffic & keep state
#----------------------------------------------------------------
pass out quick on $if_int proto tcp from any to any keep state
pass out quick on $if_int proto udp from any to any keep state
pass out quick on $if_int proto icmp from any to any keep state
block out quick on $if_int all

#----------------------------------------------------------------
# Allow in all TCP, UDP, and ICMP traffic & keep state
#----------------------------------------------------------------
pass in quick on $if_int proto tcp from any to any keep state
pass in quick on $if_int proto udp from any to any keep state
pass in quick on $if_int proto icmp from any to any keep state
block in quick on $if_int all

#################################################################
# Loopback Interface
#################################################################

#----------------------------------------------------------------
# Allow everything to/from your loopback interface so you
# can ping yourself (e.g. ping localhost)
#----------------------------------------------------------------
pass quick on $if_loop all